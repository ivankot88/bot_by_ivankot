import datetime
import random
from subprocess import Popen

import openpyxl
import peewee
import xlrd
from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, \
    InlineKeyboardButton

from classes import Users, Reminder, Events, Bot_settings
from telegramcalendar import create_calendar, number_keyboard

Popen("send_messages.py", shell=True)
bot = TeleBot("727398167:AAFa6E7ZjjieCbpqpJhe9CDu_OCazY3vnKs")
database = peewee.SqliteDatabase("database.db")
telebot = Bot_settings()


def get_id():
    """

    –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π id –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
    –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.

    """
    try:
        user_id = 0
        for i in Events.select():
            if i.id > user_id:
                user_id = i.id
        user_id += 1
    except Events.DoesNotExist:
        user_id = 0
    return user_id


def event_invite(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º,
    —É –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω–∞ –¥–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.

    """
    chosen_event = Events.select().where((Events.creator == msg.chat.id) & (Events.status == 4)).get()
    for i in Users.select():
        if msg.chat.id != i.id and i.fun.find(chosen_event.fun) + 1:
            telebot.keyboard = InlineKeyboardMarkup()
            telebot.keyboard.add(
                InlineKeyboardButton(text='–•–æ—á—É –ø–æ–π—Ç–∏', callback_data='ev_invite' + str(chosen_event.id)))
            bot.send_message(i.id, text='‚úâ\n–ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ! ' + '\n' +
                                        '‚åö–í—Ä–µ–º—è: ' + str(chosen_event.time) + '\n' +
                                        'üìÖ–î–∞—Ç–∞: ' + str(chosen_event.date) + '\n' +
                                        'üìÑ–û–ø–∏—Å–∞–Ω–∏–µ:' + chosen_event.text,
                             reply_markup=telebot.keyboard)
    chosen_event.status = 0
    chosen_event.save()


def event_create_step1(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ —Å–æ–∑–¥–∞—ë—Ç
    –Ω–æ–≤–æ–µ –ø–æ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü–µ Events –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.

    """
    get_calendar(msg)
    bot.send_message(msg.chat.id,
                     text='–í–∞—à–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
                     reply_markup=telebot.keyboard)
    chosen_event = Events.create(
        id=get_id(),
        creator=msg.chat.id,
        date=datetime.date(1, 1, 1),
        time=datetime.time(0, 0, 0),
        text='NULL',
        count=-1,
        fun=msg.text,
        address='NULL',
        members='',
        status=1
    )
    chosen_event.save()


def event_create_step2(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å—É, –Ω–∞ –∫–∞–∫–æ–π —Å—Ç–∞–¥–∏–∏
    –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    –°—Ç–∞—Ç—É—Å "1" - –∑–∞–ø–æ–ª–Ω–µ–Ω—è–µ—Ç—Å—è —è—á–µ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    –°—Ç–∞—Ç—É—Å "2" - –∑–∞–ø–æ–ª–Ω–µ–Ω—è–µ—Ç—Å—è —è—á–µ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    –°—Ç–∞—Ç—É—Å "3" - –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    –°—Ç–∞—Ç—É—Å "4" - –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è —è—á–µ–π–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞
    –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π, —Å—Ç–∞—Ç—É—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è "–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ"


    """
    try:
        chosen_event = Events.select().where((Events.count == -1) & (Events.creator == msg.chat.id)).get()
        if chosen_event.status == 1:
            if telebot.date == datetime.date(1, 1, 1):
                bot.send_message(msg.chat.id, text='–¢—ã –∑–∞–±—ã–ª –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É!')
                return
            chosen_event.date = telebot.date
            chosen_event.text = msg.text
            bot.send_message(msg.chat.id, text='–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (—Ñ–æ—Ä–º–∞—Ç HH:MM)')
            chosen_event.status = 2
            chosen_event.save()
        elif chosen_event.status == 2:
            try:
                chosen_event.time = datetime.time(int(msg.text[0:2]), int(msg.text[3:5]))
                bot.send_message(msg.chat.id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —Å –∞–¥—Ä–µ—Å–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
                chosen_event.status = 3
                chosen_event.save()
            except ValueError:
                bot.send_message(msg.chat.id, text='–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏')
    except Events.DoesNotExist:
        bot.send_message(msg.chat.id, text='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')


def event_create(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞ –∫–∞–∫–æ–π —Å—Ç–∞–¥–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    """
    if msg.text + '\n' in telebot.lines:
        event_create_step1(msg)
    else:
        event_create_step2(msg)


def event_list(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.

    """
    events = Events.select().where((Events.creator == msg.chat.id) & (Events.status == 0))
    if len(events) > 0:
        bot.send_message(msg.chat.id, text='–í–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', reply_markup=telebot.keyboard)
    count_admin = 1
    for i in events:
        event_information(msg, i, count_admin, 1)
        count_admin += 1
    count_member = 1
    for i in Events.select():
        if i.members.find(str(msg.chat.id)) != -1:
            if count_member == 1:
                bot.send_message(msg.chat.id, text='–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏–¥—ë—Ç–µ:', reply_markup=telebot.keyboard)
            event_information(msg, i, count_member, 0)
            count_member += 1
    if count_admin == 1 and count_member == 1:
        bot.send_message(msg.chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', reply_markup=telebot.keyboard)


def event_information(msg, chosen_event, number, is_creator):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ,
    –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ –Ω–µ–º—É —Ñ—É–Ω–∫—Ü–∏–∏ "–ü–æ–∫–∏–Ω—É—Ç—å, –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ",
    –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥.

    """
    telebot.keyboard = InlineKeyboardMarkup()
    text = str(number) + ') ' + chosen_event.text + '\n' + '–î–∞—Ç–∞: ' + str(chosen_event.date) + '\n'
    telebot.keyboard.add(InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ...', callback_data='info_' + str(chosen_event.id)))
    if is_creator:
        telebot.keyboard.add(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='del_' + str(chosen_event.id)))
    else:
        telebot.keyboard.add(InlineKeyboardButton(text='–ü–æ–∫–∏–Ω—É—Ç—å', callback_data='leave_' + str(chosen_event.id)))
    bot.send_message(msg.chat.id, text=text, reply_markup=telebot.keyboard)


def event(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ –≤–µ—Ç–∫–∏
    —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.

    """
    if telebot.action[msg.chat.id] == 'event':
        if msg.text == '–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ':
            telebot.keyboard = ReplyKeyboardMarkup()
            for i in telebot.lines:
                telebot.keyboard.add(i)
            bot.send_message(msg.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', reply_markup=telebot.keyboard)
            telebot.keyboard = ReplyKeyboardRemove()
            telebot.action[msg.chat.id] = 'event_create'
        elif msg.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π':
            telebot.keyboard = ReplyKeyboardRemove()
            event_list(msg)
            telebot.action[msg.chat.id] = 'answer'
    elif telebot.action[msg.chat.id] == 'event_create':
        event_create(msg)


def fun_adding(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–∑
    —Ñ–∞–π–ª–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä.

    """
    telebot.keyboard = InlineKeyboardMarkup()
    k = 0
    for i in telebot.lines:
        telebot.keyboard.add(InlineKeyboardButton(text=i, callback_data='fun_' + str(k)))
        k += 1
    telebot.keyboard.add(InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data='fun_end'))
    bot.send_message(msg.chat.id, text='–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
                     reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'fun_add'


def fun_removing(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    –∏–∑ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
    –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    """
    telebot.keyboard = InlineKeyboardMarkup()
    k = 0
    for i in telebot.lines:
        telebot.keyboard.add(InlineKeyboardButton(text=i, callback_data='fun_' + str(k)))
        k += 1
    telebot.keyboard.add(InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data='fun_end'))
    bot.send_message(msg.chat.id, text='–£–¥–∞–ª–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞', reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'fun_remove'


def fun(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–µ—Ç–∫–∏
    –≤—ã–±–æ—Ä–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    """
    if telebot.action[msg.chat.id] == 'fun':
        if msg.text == '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é':
            fun_adding(msg)
        elif msg.text == '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é':
            fun_removing(msg)


def review(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –æ–∫—Ç—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–µ–≥–æ –æ—Ç–∑—ã–≤
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    """
    if telebot.action[msg.chat.id] != "review":
        bot.send_message(msg.chat.id, text="–ù–∞–ø–∏—à–∏ –º–Ω–µ –æ—Ç–∑—ã–≤ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ —è –µ–≥–æ –ø–µ—Ä–µ–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!",
                         reply_markup=telebot.keyboard)
        telebot.action[msg.chat.id] = "review"
    else:
        bot.send_message(msg.chat.id, text="–ó–∞–ø–∏—Å–∞–ª —Ç–≤–æ–π –æ—Ç–∑—ã–≤, —Å–ø–∞—Å–∏–±–æ!", reply_markup=telebot.keyboard)
        rb = xlrd.open_workbook('review.xlsx')
        sheet = rb.sheet_by_index(0)
        wb = openpyxl.load_workbook('review.xlsx')
        sheet1 = wb['–õ–∏—Å—Ç1']
        sheet1.cell(row=sheet.nrows + 1, column=1).value = msg.chat.id
        sheet1.cell(row=sheet.nrows + 1, column=2).value = msg.from_user.first_name
        sheet1.cell(row=sheet.nrows + 1, column=3).value = msg.from_user.last_name
        sheet1.cell(row=sheet.nrows + 1, column=4).value = msg.text
        wb.save('review.xlsx')
        telebot.action[msg.chat.id] = 'answer'


def find_friend(msg):
    if not access(msg):
        return
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–≤–µ—Ä—è–µ—Ç –∏—Ö —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
    –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    —Ä–∞—Å—Å—ã–ª–∫–∞ –∏ –æ–±–º–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏.

    """
    user = Users.get(Users.id == msg.chat.id)
    hobbies = list(user.hobbies.split())
    bot.send_message(msg.chat.id, text='–í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫...')
    for i in hobbies:
        for j in Users.select():
            hobbies_friend = list(j.hobbies.split())
            if i in hobbies_friend and j.id != user.id:
                bot.send_message(j.id,
                                 text='–Ø –Ω–∞—à—ë–ª —Ç–µ–±–µ –¥—Ä—É–≥–∞!\nüôÇ {} {}\n'
                                      'üìä –†–µ–ø—É—Ç–∞—Ü–∏—è: {}\n'
                                      'üì± –¢–µ–ª–µ—Ñ–æ–Ω: {}'.format(
                                                              user.first_name,
                                                              user.last_name,
                                                              str(user.reputation),
                                                              user.telephone))
                bot.send_message(msg.chat.id,
                                 text='–Ø –Ω–∞—à—ë–ª —Ç–µ–±–µ –¥—Ä—É–≥–∞!\nüôÇ {} {}\n'
                                      'üìä–†–µ–ø—É—Ç–∞—Ü–∏—è: {}\n'
                                      'üì±–¢–µ–ª–µ—Ñ–æ–Ω: {}'.format(
                                                             j.first_name,
                                                             j.last_name,
                                                             str(j.reputation),
                                                             j.telephone))
                return
    bot.send_message(msg.chat.id, text='–î—Ä—É–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω(')


def memory(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Ä–µ–º—è, –¥–∞—Ç—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é —è—á–µ–π–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏–ª–∏
    –¥–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ –≤–µ—Ä–Ω–æ - —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É.

    """
    try:
        time = datetime.time(int(msg.text[0:2]), int(msg.text[3:5]))
        text = msg.text[6:]
        reminder = Reminder.create(
            id=msg.chat.id,
            text=text,
            date=telebot.date,
            time=time
        )
        reminder.save()
        bot.send_message(msg.chat.id, text="–•–æ—Ä–æ—à–æ! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±–µ –Ω–∞–ø–æ–º–Ω—é!")
        telebot.action[msg.chat.id] = 'answer'
        telebot.date = ''
    except ValueError:
        bot.send_message(msg.chat.id, text="–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö! –ù–µ –∑–∞–±—É–¥—å —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É!")
        return


def value_reg(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º—è, —Ñ–∞–º–∏–ª–∏—è, —É–≤–ª–µ—á–µ–Ω–∏—è.

    """
    user = Users.get(Users.id == msg.chat.id)
    telebot.keyboard = ReplyKeyboardRemove()
    if '–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏' == msg.text or telebot.action[msg.chat.id] == 'reg_hobbies' or \
            telebot.action[msg.chat.id] == 'reg_end':
        if telebot.action[msg.chat.id] == 'reg_telephone':
            telebot.keyboard = ReplyKeyboardMarkup()
            bot.send_message(msg.chat.id, text="–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ, —ç—Ç–æ –Ω–µ –∑–∞–π–º—ë—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!",
                             reply_markup=telebot.keyboard)
            telebot.keyboard.add(
                KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
            )
            bot.send_message(msg.chat.id, text='–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=telebot.keyboard)
            telebot.action[msg.chat.id] = 'reg_hobbies'
        elif telebot.action[msg.chat.id] == 'reg_hobbies':
            bot.send_message(msg.chat.id,
                             text='–ó–∞–ø–∏—Å–∞–ª —Ç–≤–æ–π –Ω–æ–º–µ—Ä. –¢–µ–ø–µ—Ä—å –æ—Ç–º–µ—Ç—å —Ö—ç—à—Ç—ç–≥–∏ –ø–æ —Å–≤–æ–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–º –ª—é–¥—è–º.'
                                  '–±—ã–ª–æ –ø—Ä–æ—â–µ –Ω–∞–π—Ç–∏ —Ç–µ–±—è.', reply_markup=telebot.keyboard)
            user.country = msg.text
            user.save()
            telebot.action[msg.chat.id] = 'reg_end'
        elif telebot.action[msg.chat.id] == 'reg_end':
            bot.send_message(msg.chat.id, text='–ó–∞–ø–∏—Å–∞–ª —Ç–≤–æ–∏ —Ö–æ–±–±–∏, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!')
            user.hobbies += msg.text
            user.save()
            fun_adding(msg)
    elif msg.text == '–Ø –æ—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º':
        telebot.keyboard = ReplyKeyboardRemove()
        bot.send_message(msg.chat.id, text='–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–º–∞–Ω–¥–∞–º\n/events, '
                                           '/find_friend, /fun',
                         reply_markup=telebot.keyboard)


def actions(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –Ω—É–∂–Ω—É—é –≤–µ—Ç–∫—É.

    """
    if 'fun' in telebot.action[msg.chat.id]:
        fun(msg)
    if 'weather_reg' in telebot.action[msg.chat.id]:
        weather_reg(msg)
    elif 'reg' in telebot.action[msg.chat.id]:
        value_reg(msg)
    elif telebot.action[msg.chat.id] == 'answer':
        bot.send_message(msg.chat.id, text=answer(msg), reply_markup=telebot.keyboard)
    elif telebot.action[msg.chat.id] == 'review':
        review(msg)
    elif telebot.action[msg.chat.id] == 'memory':
        memory(msg)
    elif 'event' in telebot.action[msg.chat.id]:
        event(msg)


def weather_reg(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

    """
    user = Users.get(Users.id == msg.chat.id)
    if telebot.action[msg.chat.id] == 'weather_reg':
        if msg.text == '–î–∞' or msg.text == '–¥–∞':
            user.weather = 1
            user.save()
            telebot.keyboard = ReplyKeyboardRemove()
            bot.send_message(msg.chat.id, text='–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?',
                             reply_markup=telebot.keyboard)
            telebot.action[msg.chat.id] = 'weather_reg1'
        if msg.text == '–ù–µ—Ç' or msg.text == '–Ω–µ—Ç':
            user.weather = -1
            user.save()
            telebot.keyboard = ReplyKeyboardRemove()
            bot.send_message(msg.chat.id, text="–•–æ—Ä–æ—à–æ, –∫–∞–∫ —Å–∫–∞–∂–µ—à—å)", reply_markup=telebot.keyboard)
    else:
        try:
            user.weather_time = datetime.time(int(msg.text[0:2]), int(msg.text[3:5]))
            bot.send_message(msg.chat.id, text='–•–æ—Ä–æ—à–æ! –ë—É–¥—É —Ç–µ–±—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ ' + msg.text,
                             reply_markup=telebot.keyboard)
            telebot.action[msg.chat.id] = 'answer'
            user.save()
        except Users.DoesNotExist or TypeError:
            bot.send_message(msg.chat.id, text='–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑!', reply_markup=telebot.keyboard)


def weather(msg, latitude, longitude):
    """

    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É –∏
    –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.

    """
    bot.send_message(msg.chat.id, text=telebot.weather_text(latitude, longitude))
    user = Users.get(Users.id == msg.chat.id)
    if user.weather == 0:
        telebot.keyboard = ReplyKeyboardMarkup()
        telebot.keyboard.add(
            KeyboardButton('–î–∞'),
            KeyboardButton('–ù–µ—Ç'))
        bot.send_message(msg.chat.id, text="–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è —Å–æ–æ–±—â–∞–ª —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å?",
                         reply_markup=telebot.keyboard)
        telebot.action[msg.chat.id] = 'weather_reg'
        return


def hello(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç - —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤–∞—è —è—á–µ–π–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
    id —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ï—Å–ª–∏ –æ–Ω –µ—Å—Ç—å - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.

    """
    try:
        user = Users.get(Users.id == msg.chat.id)
        bot.send_message(msg.chat.id,
                         text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {}!\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help'.format(
                             user.first_name))
    except Users.DoesNotExist:
        bot.send_message(msg.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!")
        first_name = msg.from_user.first_name
        last_name = msg.from_user.last_name
        if msg.from_user.first_name is None:
            first_name = 'Unnamed'
        if msg.from_user.last_name is None:
            last_name = ' '
        chosen_user = Users.create(id=msg.chat.id,
                                   telephone='NULL',
                                   hobbies='',
                                   first_name=first_name,
                                   last_name=last_name,
                                   reputation=0,
                                   latitude=0.0,
                                   longitude=0.0,
                                   weather=0,
                                   weather_time=datetime.time(0, 0, 0),
                                   fun=''
                                   )
        chosen_user.save()
        registration(msg)


@bot.message_handler(commands=['reg'])
def registration(msg):
    telebot.keyboard = ReplyKeyboardMarkup()
    telebot.keyboard.add(
        KeyboardButton("–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏"),
        KeyboardButton("–Ø –æ—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º"))
    bot.send_message(msg.chat.id,
                     text='üìÉ–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ '
                          '—Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:\n'
                          'üî∏–ë–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∏–∫–Ω–µ–π–º, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.\n',
                     reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'reg_telephone'


def answer(msg):
    """

    –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–º, –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,
    —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Å–ª–æ–≤–∞ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –≤–µ—Ç–∫–∏ –¥–ª—è
    –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥.

    """
    text = msg.text.lower()
    for i in telebot.words.welcome:
        i = i.lower()
        if i.find(text) != -1:
            return telebot.words.welcome[random.randint(0, len(telebot.words.welcome) - 1)]
    for i in telebot.words.leave:
        i = i.lower()
        if i.find(text) != -1:
            return telebot.words.leave[random.randint(0, len(telebot.words.leave) - 1)]
    if text.find("–∫–∞–∫") + 1 and text.find("–¥–µ–ª–∞") + 1:
        telebot.keyboard = ReplyKeyboardMarkup()
        telebot.keyboard.add(
            KeyboardButton("–ü–ª–æ—Ö–æ" + telebot.emoji.pictures['–≥—Ä—É—Å—Ç—å']),
            KeyboardButton("–•–æ—Ä–æ—à–æ" + telebot.emoji.pictures['—É–ª—ã–±–∫–∞']),
            KeyboardButton("–û—Ç–ª–∏—á–Ω–æ" + telebot.emoji.pictures['—É–ª—ã–±–∫–∞1']))
        return "–£ –º–µ–Ω—è –≤—Å—ë —Ö–æ—Ä–æ—à–æ, –∞ —É –≤–∞—Å?"
    elif text.find('!#!') + 1:  # —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        for i in Users.select():
            if i.id != msg.chat.id:
                bot.send_message(i.id, text='–ë–û–ì: '+msg.text[4:])
        bot.send_message(msg.chat.id, text='–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!')
    elif text.find("–ø–ª–æ—Ö–æ") + 1:
        telebot.keyboard = ReplyKeyboardRemove()
        return "–ù–∞–¥–µ—é—Å—å, —á—Ç–æ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ:)" + telebot.emoji.pictures['–ø–æ–¥–º–∏–≥–∏–≤–∞–Ω–∏–µ']
    elif text.find("—Ö–æ—Ä–æ—à–æ") + 1:
        telebot.keyboard = ReplyKeyboardRemove()
        return "–†–∞–¥ –∑–∞ –≤–∞—Å!"
    elif text.find("–æ—Ç–ª–∏—á–Ω–æ") + 1:
        telebot.keyboard = ReplyKeyboardRemove()
        return "–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!"
    elif text.find("–ø–æ–≥–æ–¥–∞") + 1 or text.find("–ø–æ–≥–æ–¥—É") + 1 or text.find("–ø–æ–≥–æ–¥–µ") + 1 or text.find("–ø–æ–≥–æ–¥–æ–π") + 1:
        receive_weather(msg)
    elif text.find("–æ—Ç–∑—ã–≤") + 1:
        review(msg)
    elif text.find('—Ä–µ–ø—É—Ç–∞—Ü–∏—è') + 1:
        receive_reputation(msg)
    elif text.find('–ø–æ–º–µ–Ω—è') + 1 and text.find('–≤—Ä–µ–º—è') + 1 and text.find('—É–≤–µ–¥–æ–º–ª–µ–Ω–∏') + 1:
        receive_change_weather(msg)
    elif text.find('–Ω–∞–π–¥–∏') + 1 and text.find('–¥—Ä—É–≥–∞'):
        find_friend(msg)
    elif text.find('–Ω–∞–ø–æ–º–∏–Ω') + 1 or text.find('–Ω–∞–ø–æ–º–Ω–∏') + 1:
        receive_memory(msg)
    elif text.find('—Ä–∞–∑–≤–ª–µ—á–µ–Ω') + 1:
        receive_fun(msg)
    elif text.find('–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏') + 1:
        receive_event(msg)
    else:
        bot.send_message(msg.chat.id, text='–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')


def access(msg):
    chosen_user = Users.get(Users.id == msg.chat.id)
    if chosen_user.telephone == 'NULL':
        bot.send_message(msg.chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥–µ', reply_markup=telebot.keyboard)
        return False
    else:
        return True


def get_calendar(msg):
    now = datetime.datetime.now()  # Current date
    chat_id = msg.chat.id
    telebot.date = (now.year, now.month)
    telebot.current_shown_dates[chat_id] = telebot.date  # Saving the current date in a dict
    markup = create_calendar(now.year, now.month)
    bot.send_message(msg.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É", reply_markup=markup)


"""

–î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–¥–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

"""


@bot.message_handler(commands=['number'])
def send_keyboard(msg):
    markup = number_keyboard()
    bot.send_message(msg.chat.id, text="–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è: ", reply_markup=markup)


@bot.message_handler(commands=['delete'])
def delete(msg):
    """

    –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

    """
    chosen_user = Users.get(Users.id == msg.chat.id)
    chosen_user.delete_instance()
    bot.send_message(msg.chat.id, text='–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')


@bot.message_handler(commands=['weather'])
def receive_weather(msg):
    user = Users.get(Users.id == msg.chat.id)
    if user.latitude == 0 or user.longitude == 0:
        telebot.keyboard = ReplyKeyboardMarkup()
        telebot.keyboard.add(
            KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)
        )
        bot.send_message(msg.chat.id, text='–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –Ω–µ –∑–Ω–∞—é —Ç–≤–æ–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:(', reply_markup=telebot.keyboard)
        return
    else:
        weather(msg, user.latitude, user.longitude)


@bot.message_handler(commands=['events'])
def receive_event(msg):
    if not access(msg):
        return
    telebot.keyboard = ReplyKeyboardMarkup()
    telebot.keyboard.add(
        KeyboardButton('–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ'),
        KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π')
    )
    bot.send_message(msg.chat.id, text='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'event'
    telebot.keyboard = ReplyKeyboardRemove()


@bot.message_handler(commands=['find_friend'])
def receive_friend(msg):
    find_friend(msg)


@bot.message_handler(commands=['fun'])
def receive_fun(msg):
    if not access(msg):
        return
    telebot.keyboard = ReplyKeyboardMarkup()
    telebot.keyboard.add(
        KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'),
        KeyboardButton('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
    )
    bot.send_message(msg.chat.id, text='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'fun'
    actions(msg)


@bot.message_handler(commands=['change_weather'])
def receive_change_weather(msg):
    telebot.keyboard = ReplyKeyboardMarkup()
    telebot.keyboard.add(
        KeyboardButton('–î–∞'),
        KeyboardButton('–ù–µ—Ç'))
    bot.send_message(msg.chat.id, text="–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è —Å–æ–æ–±—â–µ–ª —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å?",
                     reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'weather_reg'


@bot.message_handler(commands=['memory'])
def receive_memory(msg):
    get_calendar(msg)
    telebot.action[msg.chat.id] = 'memory'


@bot.message_handler(commands=['review'])
def receive_review(msg):
    review(msg)


@bot.message_handler(commands=['reputation'])
def receive_reputation(msg):
    user = Users.get(Users.id == msg.chat.id)
    if 2 > user.reputation > -2:
        bot.send_message(msg.chat.id, text='–¢–≤–æ—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: ' + str(user.reputation) + ' (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è)')
    elif int(user.reputation) > 2:
        bot.send_message(msg.chat.id, text='–¢–≤–æ—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: ' + str(
            user.reputation) + ' (–∫ —Ç–µ–±–µ —Ö–æ—Ä–æ—à–æ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)')
    else:
        bot.send_message(msg.chat.id, text='–¢–≤–æ—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: ' + str(
            user.reputation) + ' (–∫ —Ç–µ–±–µ –ø–ª–æ—Ö–æ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)')


@bot.message_handler(commands=['start'])
def start(msg):
    hello(msg)


@bot.message_handler(commands=['help'])
def information(msg):
    bot.send_message(msg.chat.id, text='/weather - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –ø–æ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é\n' +
                                       '/events - –°–æ–∑–¥–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å/–£–∑–Ω–∞—Ç—å –≤–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n' +
                                       '/find_friend - –ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞ —Å–æ —Å—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏\n' +
                                       '/reg - –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n' +
                                       '/fun - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n' +
                                       '/change_weather - –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã\n' +
                                       '/reputation - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é\n' +
                                       '/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥\n' +
                                       '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n' +
                                       '/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n' +
                                       '/review - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n' +
                                       '/memory - –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n')


@bot.message_handler(commands=['cancel'])
def cancel(msg):
    telebot.keyboard = ReplyKeyboardRemove()
    bot.send_message(msg.chat.id, text='–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=telebot.keyboard)
    telebot.action[msg.chat.id] = 'answer'
    try:
        chosen_event = Events.select().where(Events.count == -1).get()
        chosen_event.delete_instance()
        chosen_event.save()
    except Events.DoesNotExist:
        return


@bot.message_handler(content_types=["text"])
def receive_message(msg):
    if msg.chat.id not in telebot.action.keys():
        telebot.action[msg.chat.id] = 'answer'
    try:
        chosen_user = Users.get(Users.id == msg.chat.id)
        chosen_user.save()
    except Users.DoesNotExist:
        hello(msg)

    actions(msg)


@bot.message_handler(content_types='contact')
def phone(msg):
    chosen_user = Users.get(Users.id == msg.chat.id)
    chosen_user.telephone = msg.contact.phone_number
    chosen_user.save()
    if telebot.action[msg.chat.id] == 'reg_hobbies':
        telebot.keyboard = ReplyKeyboardRemove()
        value_reg(msg)


@bot.message_handler(content_types='location')
def location(msg):
    if telebot.action[msg.chat.id] != 'event_create':
        telebot.keyboard = ReplyKeyboardRemove()
        user = Users.get(Users.id == msg.chat.id)
        user.latitude = msg.location.latitude
        user.longitude = msg.location.longitude
        user.save()
        bot.send_message(msg.chat.id, text='–ó–∞–ø–∏—Å–∞–ª —Ç–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —Å–ø–∞—Å–∏–±–æ!', reply_markup=telebot.keyboard)
        weather(msg, user.latitude, user.longitude)
    else:
        chosen_event = Events.select().where((Events.count == -1) & (Events.creator == msg.chat.id)).get()
        chosen_event.address = str(msg.location.latitude) + ',' + str(msg.location.longitude)
        chosen_event.status = 4
        chosen_event.count = 0
        chosen_event.save()
        telebot.action[msg.chat.id] = 'answer'
        telebot.date = datetime.datetime(1, 1, 1)
        bot.send_message(msg.chat.id, text='–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!')
        event_invite(msg)


@bot.callback_query_handler(func=lambda call: call.data[0:13] == 'calendar-day-')
def get_day(call):
    chat_id = call.message.chat.id
    saved_date = telebot.current_shown_dates.get(chat_id)
    if saved_date is not None:
        day = call.data[13:]
        telebot.date = datetime.date(int(saved_date[0]), int(saved_date[1]), int(day))
        bot.answer_callback_query(call.id, text="–î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞")
        if telebot.action[call.message.chat.id] == 'memory':
            bot.send_message(call.message.chat.id,
                             text='–ù–∞–ø–∏—à–∏ –≤—Ä–µ–º—è –∏ —Å–∞–º–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM ')

    else:
        bot.answer_callback_query(call.id, text="–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã")


@bot.callback_query_handler(func=lambda call: call.data == 'next-month')
def next_month(call):
    chat_id = call.message.chat.id
    saved_date = telebot.current_shown_dates.get(chat_id)
    if saved_date is not None:
        year, month = saved_date
        month += 1
        if month > 12:
            month = 1
            year += 1
        date = (year, month)
        telebot.current_shown_dates[chat_id] = date
        markup = create_calendar(year, month)
        bot.edit_message_text("Please, choose a date", call.from_user.id, call.message.message_id, reply_markup=markup)
        bot.answer_callback_query(call.id, text="")
    else:
        pass


@bot.callback_query_handler(func=lambda call: call.data == 'previous-month')
def previous_month(call):
    chat_id = call.message.chat.id
    saved_date = telebot.current_shown_dates.get(chat_id)
    if saved_date is not None:
        year, month = saved_date
        month -= 1
        if month < 1:
            month = 12
            year -= 1
        date = (year, month)
        telebot.current_shown_dates[chat_id] = date
        markup = create_calendar(year, month)
        bot.edit_message_text("Please, choose a date", call.from_user.id, call.message.message_id, reply_markup=markup)
        bot.answer_callback_query(call.id, text="")
    else:
        # Do something to inform of the error
        pass


@bot.callback_query_handler(func=lambda call: call.data == 'ignore')
def ignore(call):
    bot.answer_callback_query(call.id, text="")


"""

–î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç—ã—Ö callback –∫–Ω–æ–ø–∫–∞—Ö 

"""


@bot.callback_query_handler(func=lambda call: 'fun' in call.data)
def fun_call(call):
    if call.data == 'fun_end':
        fun_call_end(call)
        return
    chosen_fun = telebot.lines[int(call.data[4:])]
    user = Users.get(Users.id == call.message.chat.id)
    if telebot.action[call.message.chat.id] == 'fun_add':
        fun_call_add(call, chosen_fun, user)
    if telebot.action[call.message.chat.id] == 'fun_remove':
        fun_call_remove(call, chosen_fun, user)


def fun_call_end(call):
    telebot.keyboard = ReplyKeyboardRemove()
    bot.send_message(call.message.chat.id, text='–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã ‚úÖ', reply_markup=telebot.keyboard)
    telebot.action[call.message.chat.id] = 'answer'


def fun_call_add(call, chosen_fun, user):
    if not chosen_fun[:len(chosen_fun) - 1] in user.fun:
        user.fun += ' ' + chosen_fun[:len(chosen_fun) - 1]
        user.save()
        bot.answer_callback_query(call.id, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    else:
        bot.answer_callback_query(call.id, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ")


def fun_call_remove(call, chosen_fun, user):
    if chosen_fun[:len(chosen_fun) - 1] in user.fun:
        user.fun = user.fun.replace(chosen_fun[:len(chosen_fun) - 1], '')
        user.fun = user.fun.replace('  ', ' ')
        user.save()
        bot.answer_callback_query(call.id, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
    else:
        bot.answer_callback_query(call.id, text="–¢–∞–∫–æ–≥–æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–µ—Ç")


@bot.callback_query_handler(func=lambda call: 'ev' in call.data)
def event_call(call):
    if call.data[0:9] == 'ev_invite':
        try:
            chosen_user = Users.get(Users.id == call.message.chat.id)
            chosen_event = Events.get(Events.id == int(call.data[9:]))
            if chosen_event.members.find(str(call.message.chat.id)) == -1:
                telebot.keyboard = InlineKeyboardMarkup()
                telebot.keyboard.add(
                    InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å', callback_data='ev_accept' + str(chosen_event.id) + ':' + str(
                        call.message.chat.id)))
                telebot.keyboard.add(
                    InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='ev_reject' + str(chosen_event.id) + ':' + str(
                        call.message.chat.id)))
                bot.send_message(chosen_event.creator,
                                 text='‚úâ\n–ù–∞ –≤–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∑–∞–ø–∏—Å–∞–ª—Å—è —á–µ–ª–æ–≤–µ–∫!\nüôÇ {} {}\n'
                                      'üìä –†–µ–ø—É—Ç–∞—Ü–∏—è: {}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {}'.format(
                                                                                chosen_user.first_name,
                                                                                chosen_user.last_name,
                                                                                str(chosen_user.reputation),
                                                                                chosen_user.telephone),
                                 reply_markup=telebot.keyboard)
                bot.edit_message_text("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞", call.from_user.id, call.message.message_id)
        except Users.DoesNotExist or Events.DoesNotExist:
            bot.send_message(call.message.chat.id, text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    elif call.data[0:9] == 'ev_accept':
        event_id = int(call.data[9:call.data.find(':')])
        user_id = int(call.data[call.data.find(':') + 1:])
        chosen_event = Events.get(Events.id == event_id)
        if chosen_event.members.find(str(user_id)) == -1:
            telebot.keyboard = InlineKeyboardMarkup()
            url = InlineKeyboardButton(text="–ê–¥—Ä–µ—Å", url="https://www.google.ru/maps/place/" + chosen_event.address)
            telebot.keyboard.add(url)
            bot.send_message(user_id,
                             text='‚úâ\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!\n‚åö –í—Ä–µ–º—è: {}\nüìÖ –î–∞—Ç–∞: {}\nüìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {}'.format(
                                 str(chosen_event.time), str(chosen_event.date), chosen_event.text),
                             reply_markup=telebot.keyboard)
            chosen_event.count += 1
            chosen_event.members += str(user_id) + ' '
            chosen_event.save()
            bot.send_message(chosen_event.creator, text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏')
        else:
            bot.send_message(chosen_event.creator, text='–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≥–ª–∞—à—ë–Ω –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ')

    elif call.data[0:9] == 'ev_reject':
        event_id = int(call.data[9:call.data.find(':')])
        creator = int(call.data[call.data.find(':') + 1:])
        chosen_event = Events.get(Events.id == event_id)
        bot.send_message(creator, text='‚úâ\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: "' + chosen_event.text + '" –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!')


@bot.callback_query_handler(func=lambda call: 'info_' in call.data)
def event_info(call):
    try:
        event_id = call.data[5:]
        chosen_event = Events.get(Events.id == event_id)
        admin = Users.get(Users.id == chosen_event.creator)
        telebot.keyboard = InlineKeyboardMarkup()
        url = InlineKeyboardButton(text="–ê–¥—Ä–µ—Å", url="https://www.google.ru/maps/place/" + chosen_event.address)
        telebot.keyboard.add(url)
        text = 'üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {}\n‚åö –í—Ä–µ–º—è: {}\nüìÖ –î–∞—Ç–∞: {}'.format(
            chosen_event.text,
            str(chosen_event.time),
            str(chosen_event.date))
        text1 = 'üôÇ –°–æ–∑–¥–∞—Ç–µ–ª—å: {}\n{}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {}\nüìä –†–µ–ø—É—Ç–∞—Ü–∏—è: {}'.format(
            admin.first_name,
            admin.last_name,
            admin.telephone,
            str(admin.reputation))
        bot.send_message(call.message.chat.id, text=text, reply_markup=telebot.keyboard)
        bot.send_message(call.message.chat.id, text=text1)
        text2 = '–£—á–∞—Å—Ç–Ω–∏–∫–∏:' + '\n'
        for members in chosen_event.members.split():
            chosen_user = Users.get(Users.id == int(members))
            text2 += 'üôÇ {} {}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {}'.format(
                chosen_user.first_name,
                chosen_user.last_name,
                chosen_user.telephone)
        if len(text2) > 11:
            bot.send_message(call.message.chat.id, text=text2)
    except Events.DoesNotExist or Users.DoesNotExist:
        pass


@bot.callback_query_handler(func=lambda call: 'del_' in call.data)
def event_delete(call):
    try:
        event_id = call.data[4:]
        chosen_event = Events.get(Events.id == event_id)
        for i in list(chosen_event.members.split()):
            bot.send_message(int(i), text='‚úâ–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–æ–∑–¥–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ "' + chosen_event.text + '"')
        bot.send_message(chosen_event.creator, text='‚úâ–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ')
        chosen_event.delete_instance()
        chosen_event.save()
    except Events.DoesNotExist:
        pass


@bot.callback_query_handler(func=lambda call: 'leave_' in call.data)
def event_delete(call):
    telebot.keyboard = InlineKeyboardMarkup()
    event_id = call.data[6:]
    user_id = str(call.message.chat.id)
    try:
        chosen_event = Events.get(Events.id == event_id)
        if chosen_event.members.find(str(user_id)) != -1:
            chosen_event.members = chosen_event.members.replace(str(user_id), ' ')
            chosen_event.members = chosen_event.members.replace('  ', ' ')
            chosen_event.count -= 1
            telebot.keyboard.add(InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ...', callback_data='info_' +
                                                                                         str(chosen_event.id)))
            bot.send_message(int(chosen_event.creator), text='‚úâ–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–∫–∏–Ω—É–ª —á–µ–ª–æ–≤–µ–∫!',
                             reply_markup=telebot.keyboard)
            chosen_event.save()
        else:
            bot.answer_callback_query(call.id, text='–í—ã —É–∂–µ –ø–æ–∫–∏–Ω—É–ª–∏ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ')
    except Events.DoesNotExist:
        bot.send_message(call.message.chat.id, text='–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')


@bot.callback_query_handler(func=lambda call: 'rep+' in call.data)
def rep_positive(call):
    user = Users.get(Users.id == int(call.data[5:]))
    user.reputation += 1
    bot.edit_message_text("*–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ü–µ–Ω—ë–Ω*", call.from_user.id, call.message.message_id)
    user.save()


@bot.callback_query_handler(func=lambda call: 'rep-' in call.data)
def rep_positive(call):
    user = Users.get(Users.id == int(call.data[5:]))
    user.reputation -= 1
    bot.edit_message_text("*–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ü–µ–Ω—ë–Ω*", call.from_user.id, call.message.message_id)
    user.save()


@bot.callback_query_handler(func=lambda call: 'number_' in call.data)
def send_keyboard(call):
    markup = number_keyboard()
    if len(call.data) == 8:
        if len(telebot.time) == 2:
            telebot.time += ':' + call.data[7:]
        else:
            telebot.time += call.data[7:]
        bot.edit_message_text("–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è: " + telebot.time, call.from_user.id, call.message.message_id,
                              reply_markup=markup)
    elif call.data == "number_back":
        if len(telebot.time) == 4:
            telebot.time = telebot.time[:3]
        else:
            telebot.time = telebot.time[:len(telebot.time) - 1]
        bot.edit_message_text("–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è: " + telebot.time, call.from_user.id, call.message.message_id,
                              reply_markup=markup)
    elif call.data == "number_done":
        bot.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: " + telebot.time, call.from_user.id, call.message.message_id,
                              reply_markup=markup)
    elif call.data == "number_clear":
        telebot.time = ''
        bot.edit_message_text("–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è: " + telebot.time, call.from_user.id, call.message.message_id,
                              reply_markup=markup)


bot.polling(none_stop=True)
